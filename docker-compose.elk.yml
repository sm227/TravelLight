version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.22
    container_name: travellight-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.22
    container_name: travellight-logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logs:/logs:ro
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      - "LS_JAVA_OPTS=-Xmx2g -Xms2g"
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.22
    container_name: travellight-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=travellight-kibana
      - SERVER_HOST=0.0.0.0
    networks:
      - elk
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # TravelLight Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: travellight-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/travellight
      - SPRING_DATASOURCE_USERNAME=travellight
      - SPRING_DATASOURCE_PASSWORD=password
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5000
    volumes:
      - ./logs:/app/logs
    networks:
      - elk
      - travellight-network
    depends_on:
      - db
      - redis
      - logstash

  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: travellight-db
    environment:
      - POSTGRES_DB=travellight
      - POSTGRES_USER=travellight
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - travellight-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U travellight -d travellight"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: travellight-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - travellight-network

volumes:
  elasticsearch_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  elk:
    driver: bridge
  travellight-network:
    driver: bridge
